Program:
----
----
----    =======>computer==================>Result


Sequence

y:
2 3
1L+1L

----
----
----

1sec=1000ns

1)Accuracy
2)Faster


1)Basic operations
2)For generating calculator=======>Desktop application
3)For generating web pages=====>Web application





c1   
---
---
---


calc


c2

calc


laptop

ms office+chrome



Java ============>Desktop and Web applications

Sun Micro Systems----1991
James Gosling----------------Oak
oak-----Trees--tea seeds


Java---coffee seed---1995


















-----
-----     =======>Compiler======>------Computer(Binary)
-----                            ------
                                 --------
1)Compilation-----Conversion of high level code to machine understandable code---compiler
2)Execution------Binary code will be resolved step by step to produce the output

Features:
1)hello.c------C+E-----------hello.exe


             C                    E
hello.java------------hello.class------hello.exe
           compiler               JVM

JVM:Java Virtual Machine

hello.class------Byte code/Intermediate code

2)Platform Independent:OS

c1---Windows

hello.java-----hello.class




c2-----Linux


hello.class------hello.exe

3)

4)
----------
-----------
----------
-----                  ===========>logic 1
-----    
-----
-----------            ============>Logic 2   
---------
-----------

java Native Interface

-----
-----    C  ==========>Logic 3
-----


5)Secure



Java API
-JDK
-JSL



JRE
-JVM

============Steps========================
1)Install JDK====>JDK1.9------Java Development Kit
2)Set the path
3)Take a notepad and write the program
4)Open cmd prompt and type compilation and execution commands

Change Directory
cd Desktop
javac filename.java
java filename


class  Demo
{
main()
{
---
---
---

}


print("");
println("");


print("Hello");
print("world");

Hello
World
-

Datatype:
int a=10;
Dt Vn=value;


int -----4 bytes of memory should be allocated for the variable a and it should 
allow only integers to be stored under the variable.

bits and bytes
1byte=8bits



2.2

float b=2.2;

a   1      !

char s='h';

char d='3';

char x='@';


int,long----->Numbers

float,double------>2.5656757578567867878

Pinky


String s1="Pinky";

 
boolean--------->true,false
Sum of two numbers:
a---->4
b---->6
c---->10






c=10

sop("c");//c
sop(c);//10

The result is:10

sop("The result is:"+c);
+ -------->Concatination
Operators:
5/2=2
5%2=1

/---------->Quotient
%---------->Remainder

a=8;
b=6;
a<b
8<6----->0


== ---------->Comparision operator

a=10;
b=10;

a==b------------>1
10==10----------->1


a=8
b=9

a==b
8==9----------->0


!=  ------>"Not equal to"

a=6
b=1
a!=b------>1

++  ------------->Incrementation operator

i=10;
i++;//11==========>i=i+1
i++;//12
i++;//13

--  --------------->Decrementation operator
i=10;
i--;//9 --------->i=i-1;
i--;//8
i--;//7

i++    !=     ++i




&&---->Logical AND
||---->Logical OR
!----->Logical NOT



a b a&&b a||b
1 0  0    1
0 1  0    1
1 1  1    1
0 0  0    0

!(8==8)


a=4
b=6

i=10;
i++;//11
i=i+5;==========>i+=5

?:

(condition)?exp1:exp2;


i++  !=     ++i
class postfix
{
public static void main(String ar[])
{
int a,z,x=10,y=20;
z=x*y++;//10*20=200
a=x*y;//10*21=210
System.out.println(z+" "+a);
}
}

a--->210
z--->200
x--->10
y--->21

class prefix
{
public static void main(String ar[])
{
int a,z,x=10,y=20;
z=x*++y;10*21=210
a=x*y;10*21=210
System.out.println(z+" "+a);
}
}


a--->210
z--->210
x--->10
y--->21















































Functions:
---
---
---
sop("hello");
sop("hai");=================>display();
sop("bye");
---
---
---
sop("hello");
sop("hai");=================>display();
sop("bye");

---
---
---
sop("hello");
sop("hai");=================>display();
sop("bye");
------
------

void  display()
{
sop("hello");=================>Reusable block/function/function definition
sop("hai");
sop("bye");
}


Parts:
1)Function definition

returnType functionName()
{


}


2)Function call

functionName();

3)Function declaration

sum();

void sum()
{

}

sum(2,3);

2,3
----->void sum(int x,int y)
      {


      }


sum(1.1,4,6.9,9);


void sum(float x,int y,float z,int w)
{



}


int a=2;
int b=3;

sum(a,b);
void sum(int x,int y)
{



}

a,b=====>actual parameters/parameters

x,y=====>Formal parameters/arguments





2--int 
2.5--float


OOPS====>Object orientd programming system

problem/task
--o1
--o2
--o3

Java as OOPL

C not OOPL

#
#
void main()
{

}

OOPS


CPP

java



class cpp
{

};
void main()
{

}


class java
{


void main()
{


}
}




class----Collection of variables/properties/fields and methods/behavoiurs.

Object----Any real world entity.It can represent a person,bank account or anything

Student ----->class

sno
      ------------>variables
sname

Student1

sno:101
sname:pinky

Student2

sno:102
sname:sweety


class Demo2---->d
{
int a,b;
void display()
{
System.out.println("Hello all");
}
public static void main(String a[])
{
Demo2 d=new Demo2();//d---->object
d.a=10;//ob.vn;
d.b=20;
System.out.println(d.a+"  "+d.b);//10  20
d.display();//ob.mn
}
}

naming conventions:

classes----capital
methods----small

Scanner

main()

BufferedReader
nextInt()


keywords-----small

helloall

int 
float

String-----------class and datatype

String s1="Hari";

Inheritence:

Single:


A----B

Hierarchical
A
--B
--C

Multi level:

A

B

C


Multiple:

A       B



   C


Hybrid:

    A
     -B
       -C
       -D




Single:
A---dA()


B---dB(),dA()



Hie:

Hierarchical
a---     A--->dA()
b---      -B-->dB()
c---      -C-->dC()


Multi level:

a--          A--dA()

b--          B--dB()

c--          C--dC()



A


B  da db


C dc da db



Hybrid:



    A--------------------------dA()
     -B------------------------dB()
       -C----------------------dC()
       -D----------------------dD()

a--dA()

b--dA(),dB()
c-dA(),dB(),dC()
d-dA(),dB(),dD()



Purpose:


class ONE
{

}

class TWO
{
void dA()
{

}
}
class THREE
{

}

.
.
.
.
.
.
.
.
.
class HUNDRED extends Two
{
void dA()
{

}

main()
Hundred d=new Hundred();
d.dA();


}


polymorphysm:
void sum()
{


}

void sum(int x,int y)
{


}
void sum(int x,int y,int z)
{


}
void sum(float x,int y,float z)
{


}

sum(1,2,3);
sum();
sum(2.3,5,9.9);
sum(5,6);


overriding:
F-Kotha,xyz

M-Kotha,abc

A-void display()
	{
                 body1
	}

B-void display()
	{
             body2
	}






class Demo
{


void sum()
{

}

void sum()
{

}



main()
{


sum();

}
}

Abstaction:Incompleteness

Employee==>sal()
    -------Part time==>sal()
                 ---hourly based==>sal()
		 ---contract based==>sal()
    -------Full time==>sal()



this:


class Demo
{

void display()
{


}


main()
{
Demo d=new Demo();
this.d.display();

}

}


class cons
{
int width;
int height;
int depth;

cons(int w,int h,int d)//class type is the implicit return type of the constructor
{

this.width=w;
this.height=h;
this.depth=d;

}

class cons
{
int w;.
int h;
int d;

cons(int w,int h,int d)//class type is the implicit return type of the constructor
{

 this.w=w;
 this.h=h;
 this.d=d;

}




stack   Heap
cs      w=10
        h=20
        d=30


Accept input:
2

nextInt()

2.2

nextFloat()

Pinky

nextLine()



methods----------->classes----------------->Packages


===============one.java========
package p1;
class A
class B
class C
===============two.java========
import p1.*;
class E
class F


Exception Handling:
Exception

---
----
---    =====Exception
----
----

try
{

--
---
---
}


catch(TypOfException ref )
{
sop("Sorry");
}


int a=10,b=0,c;
c=a/b;------ArithmeticException

int a[10];

a[0]=2;
a[1]=3;
a[33]=9;-----ArraIndexOutOfBoundsException

FileInputStream fis=new  FileInputStream("hello.txt");-----FileNotFountException

catch(Exception e)
{
e.pST();

}

catch(ArithmeticException e)
{
e.pST();

}




catch/specify


v d() throws Exception
{
--
---
----

}


Run Time Exceptions:

int a=2,b,c;
b=sc.nextInt();
if(b>0)
{
c=a/b;
}


catch(AE|AIOOBE|NPE   e)
{

}

for(i=0;i<a.length;i++)
{
sop(a[i]);
}


for-each


for(int result:a)
{
sop(result);
}


interfaces:

interface A
{

}


interface Demo
{
abstract public void dis();





}


Strings:
 
a=10.2;
b=10.2;
a==b


String s1="Hello";
String s2="Hello";y
s1==s2------------------>False
1001==1002
1001--->s1--->Hello
1002--->s2--->Hello

s1.equals(s2);



FileInputStream
FileOutput




Collections:
int a[1000];
Array

import java.util.*;
class ArrayListDemo
{
public static void main(String a[])
{
ArrayList al=new ArrayList();
al.add(new Integer(2));
al.add(new String("Hello"));
al.add(new Float(2.3f));
al.add(new Character('v'));

Iterator itr=al.iterator();

while(itr.hasNext())
{
sop(itr.next());//2

}
}

}

2              Wrapper class
Primitive type----------------->Wrapper Object

int--------->Integer
float------->Float
char-------->Character
double------->Double
String------->String



     0-2
    --->  1-Hello
      2-2.3


al.get(1)
al.remove(2);
v
al-->itr




Interfeces:

1)Iterator
2)ListIterator---->hasPre() pre()
3)Enumeration






for(i=0;i<a.length;i++)
{

}

----->2
      Hello
      2.3
v
al-->itr




































































